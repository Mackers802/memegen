{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mackyandow/V_School/DEV/group Project/meme-gen/src/components/Main.js\";\nimport React from \"react\";\nimport Image from \"./Image\";\nimport axios from \"axios\";\nimport \"./Main.css\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.refresh = async () => {\n      let randomIdNum = Math.floor(Math.random() * 99);\n      const resp = await axios.get(`https://api.imgflip.com/get_memes`);\n      const randomImg = resp.data.data.memes[randomIdNum];\n      this.setState(prevState => ({ ...prevState,\n        name: randomImg.name,\n        imageUrl: randomImg.url,\n        topText: \"\",\n        bottomText: \"\"\n      }));\n    };\n\n    this.handleChange = e => {\n      if (!this.props.selected) {\n        const {\n          name,\n          value\n        } = e.target;\n        this.setState({\n          [name]: value\n        });\n      } else this.props.handleChange(e);\n    };\n\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      topText: \"\",\n      bottomText: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.selected && !this.props.selected) {\n      await this.refresh();\n    }\n  }\n\n  render() {\n    const imageProps = this.props.selected ? this.props.selected : this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, { ...imageProps,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"refresh\",\n          onClick: this.refresh,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save\",\n          onClick: () => this.props.saveMeme(this.state),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/mackyandow/V_School/DEV/group Project/meme-gen/src/components/Main.js"],"names":["React","Image","axios","Main","Component","constructor","refresh","randomIdNum","Math","floor","random","resp","get","randomImg","data","memes","setState","prevState","name","imageUrl","url","topText","bottomText","handleChange","e","props","selected","value","target","state","componentDidMount","componentDidUpdate","prevProps","render","imageProps","saveMeme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,OAdc,GAcJ,YAAY;AACpB,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;AACA,YAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,mCAAX,CAAnB;AACA,YAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeC,KAAf,CAAqBR,WAArB,CAAlB;AACA,WAAKS,QAAL,CAAcC,SAAS,KAAK,EAC1B,GAAGA,SADuB;AAE1BC,QAAAA,IAAI,EAAEL,SAAS,CAACK,IAFU;AAG1BC,QAAAA,QAAQ,EAAEN,SAAS,CAACO,GAHM;AAI1BC,QAAAA,OAAO,EAAE,EAJiB;AAK1BC,QAAAA,UAAU,EAAE;AALc,OAAL,CAAvB;AAOD,KAzBa;;AAAA,SA2BdC,YA3Bc,GA2BCC,CAAC,IAAI;AAClB,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACxB,cAAM;AAAER,UAAAA,IAAF;AAAQS,UAAAA;AAAR,YAAkBH,CAAC,CAACI,MAA1B;AACA,aAAKZ,QAAL,CAAc;AAAE,WAACE,IAAD,GAAQS;AAAV,SAAd;AACD,OAHD,MAGO,KAAKF,KAAL,CAAWF,YAAX,CAAwBC,CAAxB;AACR,KAhCa;;AAEZ,SAAKK,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMD;;AAED,QAAMQ,iBAAN,GAA0B;AACxB,UAAM,KAAKxB,OAAL,EAAN;AACD;;AAsBD,QAAMyB,kBAAN,CAAyBC,SAAzB,EAAoC;AAClC,QAAIA,SAAS,CAACN,QAAV,IAAsB,CAAC,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;AAC9C,YAAM,KAAKpB,OAAL,EAAN;AACD;AACF;;AAED2B,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKT,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWC,QAAjC,GAA4C,KAAKG,KAApE;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,gCACE,QAAC,KAAD,OAAWK,UAAX;AAAuB,UAAA,YAAY,EAAE,KAAKX;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,OAAO,EAAE,KAAKjB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKmB,KAAL,CAAWU,QAAX,CAAoB,KAAKN,KAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA7DgC;;AAgEnC,eAAe1B,IAAf","sourcesContent":["import React from \"react\";\nimport Image from \"./Image\";\nimport axios from \"axios\";\nimport \"./Main.css\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      topText: \"\",\n      bottomText: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  refresh = async () => {\n    let randomIdNum = Math.floor(Math.random() * 99);\n    const resp = await axios.get(`https://api.imgflip.com/get_memes`);\n    const randomImg = resp.data.data.memes[randomIdNum];\n    this.setState(prevState => ({\n      ...prevState,\n      name: randomImg.name,\n      imageUrl: randomImg.url,\n      topText: \"\",\n      bottomText: \"\",\n    }));\n  };\n\n  handleChange = e => {\n    if (!this.props.selected) {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n    } else this.props.handleChange(e);\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.selected && !this.props.selected) {\n      await this.refresh();\n    }\n  }\n\n  render() {\n    const imageProps = this.props.selected ? this.props.selected : this.state;\n\n    return (\n      <div className=\"Main\">\n        <div>\n          <Image {...imageProps} handleChange={this.handleChange} />\n\n          <button className=\"refresh\" onClick={this.refresh}>\n            Refresh\n          </button>\n          <button\n            className=\"save\"\n            onClick={() => this.props.saveMeme(this.state)}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}