{"version":3,"sources":["components/Image.js","components/Main.js","components/SidebarImage.js","components/Sidebar.js","components/Header.js","App.js","index.js"],"names":["Image","props","className","style","backgroundImage","imageUrl","name","type","placeholder","onChange","handleChange","onFocus","e","target","onBlur","value","topText","bottomText","Main","refresh","a","randomIdNum","Math","floor","random","axios","get","resp","randomImg","data","memes","setState","prevState","url","selected","state","this","prevProps","imageProps","onClick","saveMeme","React","Component","SidebarImage","meme","edit","delete","Sidebar","imageVault","delMeme","editMeme","padding","map","i","stopPropagation","deleteMeme","Header","App","handleChangeSelected","splice","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c29da003.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Image.css\";\n\nfunction Image(props) {\n  return (\n    <div\n      className=\"imageDiv\"\n      style={{ backgroundImage: `url(${props.imageUrl})` }}\n    >\n      <input\n        className=\"topTextInput\"\n        name=\"topText\"\n        type=\"text\"\n        placeholder=\"Place Text Here\"\n        onChange={props.handleChange}\n        onFocus={e => (e.target.placeholder = \"\")}\n        onBlur={e => (e.target.placeholder = \"Place Text Here\")}\n        value={props.topText}\n      />\n      <input\n        className=\"bottomTextInput\"\n        name=\"bottomText\"\n        type=\"text\"\n        placeholder=\"Place Text Here\"\n        onChange={props.handleChange}\n        onFocus={e => (e.target.placeholder = \"\")}\n        onBlur={e => (e.target.placeholder = \"Place Text Here\")}\n        value={props.bottomText}\n      />\n    </div>\n  );\n}\n\nexport default Image;\n","import React from \"react\";\nimport Image from \"./Image\";\nimport axios from \"axios\";\nimport \"./Main.css\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      topText: \"\",\n      bottomText: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  refresh = async () => {\n    let randomIdNum = Math.floor(Math.random() * 99);\n    const resp = await axios.get(`https://api.imgflip.com/get_memes`);\n    const randomImg = resp.data.data.memes[randomIdNum];\n    this.setState(prevState => ({\n      ...prevState,\n      name: randomImg.name,\n      imageUrl: randomImg.url,\n      topText: \"\",\n      bottomText: \"\",\n    }));\n  };\n\n  handleChange = e => {\n    if (!this.props.selected) {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n    } else this.props.handleChange(e);\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.selected && !this.props.selected) {\n      await this.refresh();\n    }\n  }\n\n  render() {\n    const imageProps = this.props.selected ? this.props.selected : this.state;\n\n    return (\n      <div className=\"Main\">\n        <div>\n          <Image {...imageProps} handleChange={this.handleChange} />\n\n          <button className=\"refresh\" onClick={this.refresh}>\n            Refresh\n          </button>\n          <button\n            className=\"save\"\n            onClick={() => this.props.saveMeme(this.state)}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./SidebarImage.css\";\n\nconst SidebarImage = meme => {\n  return (\n    <div\n      onClick={meme.edit}\n      className=\"sidebarImage\"\n      style={{\n        backgroundImage: `url(${meme.imageUrl})`,\n      }}\n    >\n      <button className=\"deleteButton\" onClick={meme.delete}>\n        X\n      </button>\n      <h2 className=\"topTextPlacement\">{meme.topText}</h2>\n      <h2 className=\"bottomTextPlacement\">{meme.bottomText}</h2>\n    </div>\n  );\n};\n\nexport default SidebarImage;\n","import React from \"react\";\n\nimport SidebarImage from \"./SidebarImage\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = ({ imageVault, delMeme, editMeme }) => {\n  const deleteMeme = (e, i) => {\n    e.stopPropagation();\n    delMeme(i);\n  };\n  const edit = (e, i) => {\n    e.stopPropagation();\n    editMeme(i);\n  };\n\n  return (\n    <div className=\"Sidebar\" style={{ padding: \"10px\" }}>\n      {imageVault.map((meme, i) => (\n        <SidebarImage\n          key={`${meme.name}.${i}`}\n          delete={e => deleteMeme(e, i)}\n          edit={e => edit(e, i)}\n          {...meme}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Welcome to the Meme GEN</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Header, Main, Sidebar } from \"./components\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imageVault: [],\n      selected: null,\n    };\n  }\n\n  handleChangeSelected = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      ...prevState,\n      selected: {\n        ...prevState.selected,\n        [name]: value,\n      },\n    }));\n  };\n\n  saveMeme = meme => {\n    const imageVault = [...this.state.imageVault];\n    if (this.state.selected) {\n      imageVault.splice(this.state.selected.i, 1, this.state.selected);\n      this.setState({ selected: null });\n    } else {\n      imageVault.push(meme);\n    }\n    this.setState({ imageVault });\n  };\n\n  delMeme = i => {\n    const imageVault = [...this.state.imageVault];\n    imageVault.splice(i, 1);\n    this.setState({ imageVault });\n  };\n\n  editMeme = i => {\n    const selected = { ...this.state.imageVault[i] };\n    selected.i = i;\n    this.setState({ selected });\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Main\n          saveMeme={this.saveMeme}\n          selected={this.state.selected}\n          handleChange={this.handleChangeSelected}\n        />\n        <Sidebar\n          imageVault={this.state.imageVault}\n          delMeme={this.delMeme}\n          editMeme={this.editMeme}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}